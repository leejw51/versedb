name: Rust CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: nightly-2025-04-05
        targets: wasm32-unknown-unknown
        components: rustfmt, clippy
    
    - name: Install Cap'n Proto
      run: |
        sudo apt-get update
        sudo apt-get install -y capnproto

    - name: Install Chrome and chromedriver
      run: |
        sudo apt-get install -y chromium-browser chromium-chromedriver
        export CHROME_BIN=/usr/bin/chromium-browser
        export CHROMEDRIVER=/usr/bin/chromedriver

    - name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
    - name: Install trunk
      run: cargo install trunk
      
    - name: Install create-tauri-app
      run: cargo install create-tauri-app --locked
    
    - name: Build and Test
      run: |
        cd engine
        make
        make test
        export CHROME_BIN=/usr/bin/chromium-browser
        export CHROMEDRIVER=/usr/bin/chromedriver
        make testwasm32
        cd ../testweb
        make build
        
    - name: Create Package
      run: |
        cd engine
        make package

    - name: Upload Package Artifact
      uses: actions/upload-artifact@v4
      with:
        name: versedb-package
        path: upload/
        retention-days: 1

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download Package Artifact
      uses: actions/download-artifact@v4
      with:
        name: versedb-package
        path: upload/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: upload/*.zip
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true 